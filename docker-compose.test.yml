version: '3.8'

services:
  # Ubuntu variants
  ubuntu-20-04:
    image: ubuntu:20.04
    container_name: liquibase-test-ubuntu-20-04
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - DEBIAN_FRONTEND=noninteractive
      - TEST_OS=ubuntu-20.04
    command: bash /test/test-runner.sh
    
  ubuntu-22-04:
    image: ubuntu:22.04
    container_name: liquibase-test-ubuntu-22-04
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - DEBIAN_FRONTEND=noninteractive
      - TEST_OS=ubuntu-22.04
    command: bash /test/test-runner.sh
    
  ubuntu-24-04:
    image: ubuntu:24.04
    container_name: liquibase-test-ubuntu-24-04
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - DEBIAN_FRONTEND=noninteractive
      - TEST_OS=ubuntu-24.04
    command: bash /test/test-runner.sh

  # Debian variants
  debian-11:
    image: debian:11
    container_name: liquibase-test-debian-11
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - DEBIAN_FRONTEND=noninteractive
      - TEST_OS=debian-11
    command: bash /test/test-runner.sh
    
  debian-12:
    image: debian:12
    container_name: liquibase-test-debian-12
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - DEBIAN_FRONTEND=noninteractive
      - TEST_OS=debian-12
    command: bash /test/test-runner.sh

  # CentOS/RHEL variants
  centos-7:
    image: centos:7
    container_name: liquibase-test-centos-7
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=centos-7
    command: bash /test/test-runner.sh
    
  # Rocky Linux (RHEL alternative)
  rocky-8:
    image: rockylinux:8
    container_name: liquibase-test-rocky-8
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=rocky-8
    command: bash /test/test-runner.sh
    
  rocky-9:
    image: rockylinux:9
    container_name: liquibase-test-rocky-9
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=rocky-9
    command: bash /test/test-runner.sh

  # Fedora variants
  fedora-38:
    image: fedora:38
    container_name: liquibase-test-fedora-38
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=fedora-38
    command: bash /test/test-runner.sh
    
  fedora-39:
    image: fedora:39
    container_name: liquibase-test-fedora-39
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=fedora-39
    command: bash /test/test-runner.sh

  # Alpine Linux (musl-based)
  alpine-3-18:
    image: alpine:3.18
    container_name: liquibase-test-alpine-3-18
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=alpine-3.18
    command: bash /test/test-runner.sh
    
  alpine-3-19:
    image: alpine:3.19
    container_name: liquibase-test-alpine-3-19
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=alpine-3.19
    command: bash /test/test-runner.sh

  # Amazon Linux
  amazonlinux-2:
    image: amazonlinux:2
    container_name: liquibase-test-amazonlinux-2
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=amazonlinux-2
    command: bash /test/test-runner.sh
    
  amazonlinux-2023:
    image: amazonlinux:2023
    container_name: liquibase-test-amazonlinux-2023
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=amazonlinux-2023
    command: bash /test/test-runner.sh

  # Arch Linux
  archlinux:
    image: archlinux:latest
    container_name: liquibase-test-archlinux
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=archlinux
    command: bash /test/test-runner.sh

  # OpenSUSE
  opensuse-leap:
    image: opensuse/leap:15.5
    container_name: liquibase-test-opensuse-leap
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=opensuse-leap
    command: bash /test/test-runner.sh

  # ARM64 variants (if running on ARM64 host)
  ubuntu-22-04-arm64:
    image: ubuntu:22.04
    platform: linux/arm64
    container_name: liquibase-test-ubuntu-22-04-arm64
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - DEBIAN_FRONTEND=noninteractive
      - TEST_OS=ubuntu-22.04-arm64
    command: bash /test/test-runner.sh
    profiles: ["arm64"]
    
  alpine-3-19-arm64:
    image: alpine:3.19
    platform: linux/arm64
    container_name: liquibase-test-alpine-3-19-arm64
    volumes:
      - ./install.sh:/test/install.sh:ro
      - ./test-runner.sh:/test/test-runner.sh:ro
    environment:
      - TEST_OS=alpine-3.19-arm64
    command: bash /test/test-runner.sh
    profiles: ["arm64"]

# Test runner coordination
  test-coordinator:
    image: alpine:3.19
    container_name: liquibase-test-coordinator
    volumes:
      - ./test-coordinator.sh:/test/test-coordinator.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - ubuntu-20-04
      - ubuntu-22-04
      - ubuntu-24-04
      - debian-11
      - debian-12
      - centos-7
      - rocky-8
      - rocky-9
      - fedora-38
      - fedora-39
      - alpine-3-18
      - alpine-3-19
      - amazonlinux-2
      - amazonlinux-2023
      - archlinux
      - opensuse-leap
    command: sh /test/test-coordinator.sh
    profiles: ["coordinator"]

networks:
  default:
    name: liquibase-test-network