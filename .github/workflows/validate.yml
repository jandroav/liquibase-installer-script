name: 🔍 Validate Installer Script

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run validation daily at 2 AM UTC to catch upstream changes
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  validate-installer:
    name: 🔍 Validate Installer Script
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Lint shell script
        run: |
          sudo apt-get update -y
          sudo apt-get install -y shellcheck
          echo "::group::ShellCheck Results"
          shellcheck install.sh
          echo "::endgroup::"

      - name: ✅ Test script syntax
        run: |
          bash -n install.sh

      - name: 🧪 Test help functionality
        run: |
          chmod +x install.sh
          ./install.sh --help

      - name: 🌐 Test dry run functionality
        run: |
          echo "::group::OSS Dry Run Test"
          DRY_RUN=true ./install.sh latest oss
          echo "::endgroup::"
          
          echo "::group::Secure Dry Run Test"  
          DRY_RUN=true ./install.sh 5.0.0 secure
          echo "::endgroup::"

      - name: ⚠️ Test error handling
        run: |
          echo "::group::Error Handling Tests"
          if ./install.sh invalid.version 2>&1 | grep -q "Unknown argument:"; then
            echo "✅ Invalid version handling works"
          else
            echo "❌ Invalid version handling failed"
            echo "Actual output:"
            ./install.sh invalid.version 2>&1 || true
            exit 1
          fi
          
          if ./install.sh 4.33.0 invalid.edition 2>&1 | grep -q "Unknown argument:"; then
            echo "✅ Invalid edition handling works"
          else
            echo "❌ Invalid edition handling failed"
            echo "Actual output:"
            ./install.sh 4.33.0 invalid.edition 2>&1 || true
            exit 1
          fi
          echo "::endgroup::"

  report-validation:
    name: 📈 Validation Summary
    runs-on: ubuntu-latest
    needs: [validate-installer]
    if: always()
    
    steps:
      - name: 📊 Generate validation summary
        run: |
          echo "## 🔍 Liquibase Installer Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.validate-installer.result }}" == "success" ]; then
            echo "✅ **Script Validation**: PASSED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ **ShellCheck**: No issues found" >> $GITHUB_STEP_SUMMARY
            echo "✅ **Syntax**: Valid bash script" >> $GITHUB_STEP_SUMMARY
            echo "✅ **Help Command**: Working correctly" >> $GITHUB_STEP_SUMMARY
            echo "✅ **Dry Run**: OSS and Secure editions tested" >> $GITHUB_STEP_SUMMARY
            echo "✅ **Error Handling**: Invalid inputs handled properly" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Script Validation**: FAILED" >> $GITHUB_STEP_SUMMARY
            echo "Check the workflow logs for details" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note**: Full cross-platform installation testing runs in the Cross-Platform Testing workflow" >> $GITHUB_STEP_SUMMARY